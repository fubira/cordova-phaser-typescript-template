anchors:
  cache_key: &cache_key dependency-cache-{{ checksum "package.json" }}
  container: &container
    docker:
      - image: circleci/android:api-26-node
    working_directory: ~/src

version: 2
jobs:
  build_and_test:
    <<: *container
    steps:
      - checkout
      - run: sudo npm install -g npm
      - run: node --version
      - run: npm --version
      - restore_cache:
          key: *cache_key
      - run: npm install
      - save_cache:
          key: *cache_key
          paths: 
            - node_modules
      - run: npm run webpack
      - run: npm run test
  deploy:
    <<: *container
    steps:
      - checkout
      - run: sudo apt-get update && sudo apt-get install -y gradle
      - run: sudo npm install -g npm
      - run: sudo npm install -g cordova
      - run: node --version
      - run: npm --version
      - restore_cache:
          key: *cache_key
      - run: npm install
      - save_cache:
          key: *cache_key
          paths: 
            - node_modules
      - run: bash setup-keystore.sh
      - run: cordova platform rm android && cordova platform add android
      - run: echo # cordova-res
      - run: npm run webpack:prod && cordova build android
      - run:
          name: Upload apk to DeployGate
          command: |
            URL="https://deploygate.com/api/users/${DEPLOYGATE_USERNAME}/apps"
            APK_PATH=platforms/android/app/build/outputs/apk/app-debug.apk
            MESSAGE=$(git log --format="[%h] commited by %cN at %ci" -n 1)
            curl -F "file=@${APK_PATH}" -F "token=${DEPLOYGATE_API_KEY}" -F "message=${MESSAGE}" ${URL}

      - store_artifacts:
          path: platforms/android/app/build/outputs/apk/
          destination: apk

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_and_test
      - deploy:
          requires:
            - build_and_test
          filters:
            branches:
              only: master
